{"version":3,"sources":["scripts/preprocess.js","scripts/tooltip.js","scripts/viz4.js","scripts/alluvial.js","scripts/viz1.js","../node_modules/scrollama/build/scrollama.js","scripts/scrolly/network.js","scripts/scrolly.js","index.js"],"names":["data","sankeyData","alluvialData","filteredAlluvialData","companiesFlightArray","topCompaniesCount","companiesAircrafts","topCompaniesSet","Set","setData","newData","setCompaniesFlightCount","setAlluvialData","forEach","d","push","airline","duration","departureTime","flightRange","count","parseInt","filterAlluvialData","index","findIndex","company","found","find","f","otherCount","setSankeyData","airlineDurationCounts","key","durationDepartureCounts","departureFlightCounts","Object","keys","split","source","target","level","getData","getSankeyData","getAlluvialData","getFilteredAlluvialData","getCompaniesFlightArray","getTopCompaniesCount","setTopCompaniesCount","getCompaniesAircraftsMap","groupByMainCompanies","agg","Map","x","has","airportIn","airportOut","keyBis","get","set","parseFloat","number","flyArray","value","Promise","resolve","reject","resizeTopCompagnies","bottomBucket","selection","splice","add","topCompanies","delete","numOthers","sortedCompanies","entries","sort","a","b","setCompaniesAircraftsMap","aircraftsData","aircrafts","opName","type","Tooltip","attachElement","element","d3","select","append","attr","style","m","html","pageY","text","color","svg","transition","selectAll","remove","name","window","innerWidth","category","fraction","total","biggestCompaniesAircrafts","otherCompaniesAircrafts","colorScale","FACTOR","COLUMN_NUMBER","SQUARE_SIZE","INTERGAP_SPACE","tooltip","initWaffle","onscroll","scrollY","csv","then","files","preprocess","drawWaffles","separateBigFromOthers","drawOtherCompaniesWaffle","drawTopCompaniesWaffles","addLegend","modifyData","viz","biggestCompaniesFlights","typeCount","createScale","domain","map","scaleOrdinal","range","schemeCategory10","calculateWaffleDimensions","reduce","acc","rows","Math","ceil","otherCompaniesWaffleHeight","width","height","cols","squareSize","offset","waffleify","div","drawWaffle","companyMap","othersCount","length","i","totalPark","prev","item","waffles","round","enter","on","showTooltipAircrafts","moveTooltip","hideTooltip","legendItems","graph","nodes","links","loadData","createAlluvialViz","initAlluvial","extractTimes","sankey","nodeSort","nodeWidth","nodePadding","size","console","log","sourceIndex","node","targetIndex","sourceNode","targetNode","x0","y0","lastNodeHeight","filter","getBoundingClientRect","y1","x1","event","showAlluvialNode","showTooltipNode","layer","resetAlluvial","join","sankeyLinkHorizontal","max","showAlluvialLink","showTooltipLink","bbox","getBBox","y","highlightLinks","alluvialToHighlight","sankeyToHighlight","link","sd","sum","ad","linkPath","colorPercentage","sourceName","targetName","nameArray","includes","nodeName","BUCKET_HEIGHT","BUCKET_WIDTH","displayBucketGraph","heightScale","createHeightScale","topBucket","setUpSlider","displayTopBucket","displayBottomBucket","setAnimation","slider","document","getElementById","sliderValue","innerHTML","oninput","waffle","alluvial","c","showTooltipTop","toolTipDisplay","flightTotal","showTooltipBottom","maxHeight","scaleLinear","min","hublot","lid","handle","open","onclick","classList","Network","ratio","tooltipLegend","airportCode","levelGeo","null","ccolor","currentGeo","limits","minMaxXGlobal","minMaxYGlobal","isFlightShow","createLegend","val","self","createLegendNetwork","infoButtion_siCliked","showLegendNetwork","hiddenLegendNetwork","localairports","addAirportLegendNetwork","cont","nb","minMaxX","extent","lat","minMaxY","lon","airport","undefined","ease","easePolyInOut","circles","scaleSize","freq","showTooltipAirport","country","city","e","continent","easeCubicOut","delay","updateCurrentState","bind","localflights","addFlightLegendNetwork","easeCubicInOut","raise","firstTransition","lvl","delAirportLegendNetwork","delFlightLegendNetwork","scrolly","figure","article","step","figureHeight","innerHeight","scroller","scrollama","figWidth","network","handleStepEnter","response","direction","displayAirports","displayFlights","removeAirports","removeFlights","handleResize","stepH","floor","figureMarginTop","resize","handleStepExit","initNetwork","setup","debug","onStepExit","onStepEnter","onbeforeunload","scrollTo","onload","all","concat","buckets"],"mappings":"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","file":"src.5d546ef4.js","sourceRoot":"..\\src","sourcesContent":["let data = [];\nlet sankeyData = [];\nlet alluvialData = [];\nlet filteredAlluvialData = [];\nlet companiesFlightArray = [];\nlet topCompaniesCount = 0;\nlet companiesAircrafts = [];\n\nlet topCompaniesSet = new Set();\n\nexport function setData(newData) {\n  data = newData\n  companiesFlightArray = setCompaniesFlightCount(data);\n}\n\nexport function setAlluvialData(data) {\n  alluvialData = [];\n  data.forEach(d => {\n    alluvialData.push({airline: d.airline, duration: d.duration, departureTime: d.departureTime, flightRange: d.flightRange, count: parseInt(d.count)});\n  });\n}\n\nexport function filterAlluvialData() {\n  filteredAlluvialData = [];\n\n  alluvialData.forEach(d => {\n    let index = companiesFlightArray.findIndex(company => company[0] === d.airline);\n    if (index >= 0 && index < topCompaniesCount) {\n      filteredAlluvialData.push(d);\n    } else {\n      let found = filteredAlluvialData.find(f => f.duration === d.duration && f.departureTime === d.departureTime && f.flightRange === d.flightRange && f.airline === 'OTHERS');\n      if (found) {\n        found.count += d.count;\n      } else {\n        filteredAlluvialData.push({airline: 'OTHERS', duration: d.duration, departureTime: d.departureTime, flightRange: d.flightRange, count: d.count});\n      }\n    }\n  });\n\n  let index = companiesFlightArray.findIndex(company => company === 'OTHERS');\n  if (index >= 0 && index < topCompaniesCount) {\n    let found = filteredAlluvialData.find(f => f.airline === 'OTHERS');\n    if (found) {\n      found.count += otherCount;\n    } else {\n      filteredAlluvialData.push({airline: 'OTHERS', duration: '', departureTime: '', flightRange: '', count: otherCount});\n    }\n  }\n\n  setSankeyData();\n}\n\n\nexport function setSankeyData() {\n  // 'filteredAlluvialData' is the array of objects containing airline, duration, departureTime, and flightRange\n\n  sankeyData = [];\n  // count objects with same airline and duration\n  const airlineDurationCounts = {};\n  filteredAlluvialData.forEach(d => {\n    const key = `${d.airline}_${d.duration}`;\n    if (!airlineDurationCounts[key]) {\n      airlineDurationCounts[key] = 0;\n    }\n    airlineDurationCounts[key] += d.count;\n  });\n\n  // count objects with same duration and departureTime\n  const durationDepartureCounts = {};\n  filteredAlluvialData.forEach(d => {\n    const key = `${d.duration}_${d.departureTime}`;\n    if (!durationDepartureCounts[key]) {\n      durationDepartureCounts[key] = 0;\n    }\n    durationDepartureCounts[key] += d.count;\n  });\n\n  // count objects with same departureTime and flightRange\n  const departureFlightCounts = {};\n  filteredAlluvialData.forEach(d => {\n    const key = `${d.departureTime}_${d.flightRange}`;\n    if (!departureFlightCounts[key]) {\n      departureFlightCounts[key] = 0;\n    }\n    departureFlightCounts[key] += d.count;\n  });\n\n  Object.keys(airlineDurationCounts).forEach(key => {\n    const [airline, duration] = key.split('_');\n    const source = airline;\n    const target = duration;\n    const count = airlineDurationCounts[key];\n    sankeyData.push({source, target, count, level: 0});\n  });\n  Object.keys(durationDepartureCounts).forEach(key => {\n    const [duration, departureTime] = key.split('_');\n    const source = duration;\n    const target = departureTime;\n    const count = durationDepartureCounts[key];\n    sankeyData.push({source, target, count, level: 1});\n  });\n  Object.keys(departureFlightCounts).forEach(key => {\n    const [departureTime, flightRange] = key.split('_');\n    const source = departureTime;\n    const target = flightRange;\n    const count = departureFlightCounts[key];\n    sankeyData.push({source, target, count, level: 2});\n  });\n\n  return sankeyData;\n}\n\nexport function getData() {\n  return [...data];\n}\n\nexport function getSankeyData() {\n  return [...sankeyData];\n}\n\nexport function getAlluvialData() {\n  return [...alluvialData];\n}\n\nexport function getFilteredAlluvialData() {\n  return [...filteredAlluvialData];\n}\n\nexport function getCompaniesFlightArray() {\n  return [...companiesFlightArray];\n}\n\nexport function getTopCompaniesCount(){\n  return topCompaniesCount;\n}\n\nexport function setTopCompaniesCount(count){\n  topCompaniesCount = count;\n}\n\nexport function getCompaniesAircraftsMap() {\n  return companiesAircrafts;\n}\n\n\nexport function groupByMainCompanies(data) {\n  let agg = new Map()\n  data.forEach(function (x) {\n    if (topCompaniesSet.has(x.company)) { } else {\n      x.company = \"OTHERS\"\n    }\n    let key = [x.company, x.airportIn, x.airportOut]\n    let keyBis = [x.company, x.airportOut, x.airportIn]\n\n    if (agg.get(key)) {\n      agg.set(key, agg.get(key) + parseFloat(x.number))\n    } else if (agg.get(keyBis)) {  \n      agg.set(keyBis, agg.get(keyBis) + parseFloat(x.number))\n    } else {\n      agg.set(key, parseFloat(x.number))\n    }\n  })\n  let flyArray = []\n  agg.forEach(function (value, key) {\n    flyArray.push({ company: key[0], airportIn: key[1], airportOut: key[2], number: value})\n  })\n  return new Promise((resolve, reject) => resolve(flyArray))\n}\n\nexport function resizeTopCompagnies(bottomBucket) {\n  let selection = bottomBucket.splice(0,   topCompaniesCount);\n  selection.forEach(d => topCompaniesSet.add(d[0]))\n  return selection;\n}\n\nfunction setCompaniesFlightCount(data) {\n  const topCompanies = new Map()\n  data.forEach((d) => {\n    if (!topCompanies.get(d.company)) {\n      topCompanies.set(d.company, parseFloat(d.number))\n    }\n    else {\n      topCompanies.set(d.company, topCompanies.get(d.company) + parseFloat(d.number))\n    }\n  })\n  topCompanies.delete('NULL')\n  topCompanies.delete('')\n  let numOthers = topCompanies.get(\"OTHERS\")\n  topCompanies.delete(\"OTHERS\")\n\n  let sortedCompanies = [...topCompanies.entries()].sort((a, b) => b[1] - a[1])\n\n  sortedCompanies.push([\"OTHERS\", numOthers])\n  return sortedCompanies\n}\n\nexport function setCompaniesAircraftsMap(aircraftsData) {\n  const aircrafts = new Map();\n\n  aircraftsData.forEach((d) => {\n      let opName = d.company;\n\n      if (opName == \"\" || opName == \"NULL\") return;\n\n      if (!aircrafts.get(opName)) {\n          if (opName)\n          aircrafts.set(opName, new Map());\n      }\n\n      let type = d.type == '' || d.type == 'NULL' ? 'Inconnu' : d.type;\n\n      if (!aircrafts.get(opName).get(type)) {\n          aircrafts.get(opName).set(type, 1);\n      }\n\n      else {\n          aircrafts.get(opName).set(type, aircrafts.get(opName).get(type) + 1);\n      }\n  })\n  companiesAircrafts = aircrafts;\n\n  return aircrafts;\n  \n}","\nexport default class Tooltip {\n    element;\n\n    constructor(attachElement = \"body\") {\n        this.element = d3.select(attachElement)\n            .append(\"div\")\n            //.style(\"opacity\", 0)\n            .attr(\"class\", \"tooltip\")\n            .style(\"background-color\", \"black\")\n            .style(\"border-radius\", \"5px\")\n            .style(\"padding\", \"10px\")\n            .style(\"color\", \"white\")\n            .style('position', 'absolute')\n            .style(\"display\", \"none\")\n    }\n\n    showTooltipTop(m, d) {\n        this.element\n            .style(\"opacity\", 1)\n            .html(d[0] + \": \" + d[1] + \" vols\")\n            .style(\"left\", (m.x + 30) + \"px\")\n            .style(\"top\", (m.pageY + 30) + \"px\")\n            .style('width', null)\n            .style(\"display\", \"block\")\n    }\n\n    addAirportLegendNetwork(level, text, color) {\n        const svg = this.element\n            .select(\"#legAirportsBlock\")\n            .append('svg')\n            .attr(\"class\", \"legAirport_\" + level)\n            .attr(\"height\", \"40px\")\n\n        svg.append(\"circle\")\n            .transition()\n            .duration(300)\n            .attr(\"r\", 9)\n            .attr(\"cx\", 10)\n            .attr(\"cy\", 10)\n            .attr(\"fill\", color)\n            .attr('stroke', 'black')\n            .attr('stroke-width', '1')\n\n        svg.append(\"text\")\n            .transition()\n            .duration(300)\n            .text(\"Aéroport \" + text)\n            .attr(\"x\", 30)\n            .attr(\"y\", 15)\n    }\n\n    delFlightLegendNetwork() {\n        d3.selectAll(\".legFlight\").transition()\n            .duration(300).remove()\n    }\n\n    addFlightLegendNetwork(text, color) {\n        const svg = this.element.select(\"#legFlightsBlock\").append('svg')\n            .attr(\"class\", \"legFlight\")\n            .attr(\"height\", \"40px\")\n\n        svg.append(\"rect\")\n            .transition()\n            .duration(300)\n            .attr(\"width\", 30)\n            .attr(\"height\", 10)\n            .attr(\"x\", -5)\n            .attr(\"y\", 5)\n            .attr(\"fill\", color)\n\n        svg.append(\"text\")\n            .transition()\n            .duration(300)\n            .text(text)\n            .attr(\"x\", 30)\n            .attr(\"y\", 15)\n    }\n\n    delAirportLegendNetwork(level) {\n        d3.selectAll(\".legAirport_\" + level)\n            .transition()\n            .duration(300)\n            .remove()\n    }\n\n    createLegendNetwork() {\n        this.element\n            .style(\"background\", \"rgba(255,255,255,0.5)\")\n            .style(\"left\", 3 + \"px\")\n            .style(\"top\", 35 + \"px\")\n            .style('width', '300px')\n            .style('height', '500px')\n            .attr('id', 'infoNetwork')\n            .style(\"opacity\", 0)\n\n        this.element\n            .append(\"div\")\n            .attr(\"id\", \"legFlightsBlock\")\n\n        this.element\n            .append(\"div\")\n            .attr(\"id\", \"legAirportsBlock\")\n    }\n\n    showLegendNetwork() {\n        this.element\n            .transition()\n            .duration(300)\n            .style(\"opacity\", 1)\n            .style(\"display\", \"block\")\n    }\n\n    hiddenLegendNetwork() {\n        this.element.style(\"display\", \"none\")\n            .style(\"opacity\", 0)\n    }\n\n    showTooltipBottom(m, d) {\n        this.element\n            .style(\"opacity\", 1)\n            .html(\"Prochaines 5 plus grandes compagnies: <br>\" + d)\n            .style(\"left\", (m.x + 30) + \"px\")\n            .style(\"top\", (m.pageY + 30) + \"px\")\n            .style('width', '300px')\n            .style(\"display\", \"block\")\n    }\n\n\n    showTooltipLink(m, source, target, value, level) {\n        var text = \"\";\n\n        switch(level) {\n            case 0: \n                text = `${value} vols ${target}-courriers<br>effectués par ${source}`\n                break;\n            case 1:\n                text = `${value} vols ${source}-courriers<br>effectués entre ${target}`\n                break;\n            case 2: \n                text = `${value} vols effectués<br>entre ${source} de desserte ${target}`\n                break;\n        }\n\n        this.element\n            .style(\"opacity\", 0.7)\n            .html(text)\n            .style(\"left\", (m.x + 30) + \"px\")\n            .style(\"top\", (m.pageY + 30) + \"px\")\n            .style(\"display\", \"block\")\n    }\n\n\n\n    showTooltipNode(m, name, value, level) {\n        var text = \"\";\n        switch(level) {\n            case 0: \n                text = `${value} vols effectués par ${name}`\n                break;\n            case 1:\n                text = `${value} vols ${name}-courriers`\n                break;\n            case 2: \n                text = `${value} vols effectués entre ${name}`\n                break;\n            default:\n                text = `${value} vols de desserte ${name}`\n                break;\n        }\n\n        this.element\n            .style(\"opacity\", 0.7)\n            .html(text)\n            .style(\"left\", (m.x + 30) + \"px\")\n            .style(\"top\", (m.pageY + 30) + \"px\")\n            .style(\"display\", \"block\")\n    }\n\n    showTooltipAirport(m, d) {\n        this.element\n            .style(\"opacity\", 0.7)\n            .html(d[0] + \"<br>\" + d[2] + \" - \" + d[1] + \"<br>\"+ d[3] + \" vols\")\n            .style(\"left\", ((m.x > window.innerWidth * 0.5) ? (m.x - 90) : (m.x + 30)) + \"px\")\n            .style(\"top\", (m.pageY + 30) + \"px\")\n            .style(\"display\", \"block\")\n    }\n\n    showTooltipAircrafts(m, d) {\n\n        this.element\n            .style(\"opacity\", 1)\n            .html('Aéronef de type: ' + d.category + '<br>' + 'Quantité: ' + d.fraction + ' / ' + d.total)\n            .style(\"left\", (m.x + 30) + \"px\")\n            .style(\"top\", (m.pageY + 30) + \"px\")\n            .style(\"display\", \"block\")\n    }\n\n    moveTooltip(m) {\n        this.element\n            .style(\"left\", (m.x + 30) + \"px\")\n            .style(\"top\", (m.pageY + 30) + \"px\")\n    }\n\n    hideTooltip() {\n        this.element.style(\"display\", \"none\")\n    }\n}","import * as preprocess from \"./preprocess.js\"\nimport Tooltip from \"./tooltip.js\"\n\nlet biggestCompaniesAircrafts;\nlet otherCompaniesAircrafts;\nlet colorScale = {}\nconst FACTOR = 5;\nconst COLUMN_NUMBER = 25;\nconst SQUARE_SIZE = 20;\nconst INTERGAP_SPACE = 5;\n\nlet tooltip = new Tooltip();\n\nexport function initWaffle() {\n\twindow.onscroll = function () {\n\t\tvar scrollPos = window.scrollY;\n\n\t\tif (scrollPos >= 4000) {\n\t\t\twindow.onscroll = null;\n\t\t\td3.csv('./aircrafts.csv').then(function (files) {\n\t\t\t\tpreprocess.setCompaniesAircraftsMap(files);\n\t\t\t\tdrawWaffles();\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport function drawWaffles() {\n\tseparateBigFromOthers();\n\n\tdrawOtherCompaniesWaffle();\n\tdrawTopCompaniesWaffles();\n\taddLegend();\n\n}\n\nexport function modifyData() {\n\tconst viz = d3.select('#viz4')\n\tviz.select('#topWaffles').remove();\n\tviz.select('#otherWaffle').remove();\n\tviz.select('.legend').remove();\n\n\tseparateBigFromOthers();\n\n\tdrawOtherCompaniesWaffle();\n\tdrawTopCompaniesWaffles();\n\taddLegend();\n}\n\nfunction separateBigFromOthers() {\n\tconst biggestCompaniesFlights = preprocess.getCompaniesFlightArray();\n\tconst companiesAircrafts = preprocess.getCompaniesAircraftsMap();\n\tbiggestCompaniesAircrafts = new Map();\n\totherCompaniesAircrafts = new Map();\n\tbiggestCompaniesFlights.forEach((d, index) => {\n\t\tif (index < preprocess.getTopCompaniesCount())\n\t\t\tbiggestCompaniesAircrafts.set(d[0], companiesAircrafts.get(d[0]))\n\t\telse {\n\t\t\tfor (const typeCount of companiesAircrafts.get(d[0])) {\n\t\t\t\tconst name = typeCount[0];\n\n\t\t\t\tif (!otherCompaniesAircrafts.get(name))\n\t\t\t\t\totherCompaniesAircrafts.set(name, 0);\n\t\t\t\totherCompaniesAircrafts.set(\n\t\t\t\t\tname,\n\t\t\t\t\totherCompaniesAircrafts.get(name) + typeCount[1]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t})\n}\n\nfunction createScale(data) {\n\tconst domain = data.map((d) => {\n\t\treturn d.category;\n\t});\n\tcolorScale = d3.scaleOrdinal()\n\t\t.domain(domain)\n\t\t.range(d3.schemeCategory10);\n}\n\nfunction calculateWaffleDimensions(data, FACTOR) {\n\tconst total = data.reduce((acc, d) => acc + d.value, 0);\n\t// let cols = Math.floor(Math.sqrt(((total / FACTOR) * width) / height));\n\t//if(cols === 0) cols = 1\n\tconst rows = Math.ceil(total / FACTOR / 25);\n\totherCompaniesWaffleHeight = rows * SQUARE_SIZE + rows * INTERGAP_SPACE;\n\n\treturn {\n\t\twidth: COLUMN_NUMBER * SQUARE_SIZE + COLUMN_NUMBER * INTERGAP_SPACE,\n\t\theight: otherCompaniesWaffleHeight,\n\t\trows,\n\t\tcols: COLUMN_NUMBER,\n\t\tsquareSize: SQUARE_SIZE,\n\t\toffset: INTERGAP_SPACE,\n\t};\n}\n\nfunction drawOtherCompaniesWaffle() {\n\tconst data = waffleify(otherCompaniesAircrafts);\n\tconst div = d3.select(\"#viz4\")\n\t\t.append('div')\n\t\t.attr('id', 'otherWaffle')\n\t\t.append('div')\n\t\t.attr('class', 'waffle')\n\n\tcreateScale(data);\n\tdrawWaffle(data, div);\n\td3.select(\"#otherWaffle\")\n\t\t.append('p')\n\t\t.attr('class', 'waffleLabel')\n\t\t.html(\"AUTRES COMPAGNIES\");\n\n}\n\nfunction drawTopCompaniesWaffles() {\n\td3.select(\"#viz4\")\n\t\t.append(\"div\")\n\t\t.attr('id', 'topWaffles')\n\n\tlet index = 0;\n\tbiggestCompaniesAircrafts.forEach((companyMap, name) => {\n\t\tconst div = d3.select(\"#topWaffles\")\n\t\t\t.append(\"div\")\n\t\t\t.attr(\"class\", 'waffle')\n\n\t\tdrawWaffle(waffleify(companyMap), div, index);\n\t\td3.select(\"#topWaffles\")\n\t\t\t.append('p')\n\t\t\t.attr('class', 'waffleLabel')\n\t\t\t.html(name);\n\t\tindex++;\n\t});\n\n}\n\nfunction waffleify(data) {\n\tconst newData = [];\n\t[...data.entries()].forEach((d) => {\n\t\tnewData.push({ category: d[0], value: d[1] });\n\t});\n\tnewData.sort((a, b) => b.value - a.value)\n\tlet othersCount = 0;\n\tif (newData.length > 8) {\n\t\tfor (let i = 8; i < newData.length; i++) {\n\t\t\tothersCount += newData[i].value;\n\t\t}\n\t}\n\tnewData.splice(8, newData.length - 8);\n\tnewData.push({ category: \"Autres\", value: othersCount })\n\n\tlet totalPark = newData.reduce((prev, item) => prev + item.value, 0);\n\n\tconst waffles = [];\n\tnewData.forEach((d) => {\n\t\tfor (let i = 0; i < Math.round(d.value / FACTOR); i++) {\n\t\t\twaffles.push({ category: d.category, fraction: d.value, total: totalPark });\n\t\t}\n\t});\n\n\treturn waffles;\n}\n\nfunction drawWaffle(waffles, div) {\n\tdiv.selectAll('.block')\n\t\t.data(waffles)\n\t\t.enter()\n\t\t.append('div')\n\t\t.attr('background-image', 'url(\\'img/plane-icon.png\\')')\n\t\t.attr('class', 'block')\n\t\t.style('background-color', d => colorScale(d.category))\n\t\t.on(\"mouseover\", function (m, d) {\n\t\t\ttooltip.showTooltipAircrafts(m, d);\n\t\t})\n\n\tdiv.on(\"mousemove\", function (m) { \n\t\t\treturn tooltip.moveTooltip(m) \n\t\t})\n\t\t.on(\"mouseleave\", function () {\n\t\t\treturn tooltip.hideTooltip();\n\t\t});\n\n}\n\n\nfunction addLegend() {\n\td3.select('#viz4').append('br')\n\tconst legendContainer = d3.select('#viz4')\n\t\t.append('svg')\n\t\t.attr('class', 'legend')\n\t\t.attr('height', '50')\n\t\t.attr('width', colorScale.domain().length * 50 + 50)\n\t\t.append('g')\n\t\t.attr('class', 'legend-container')\n\t\t.attr('transform', 'translate(10, 10)')\n\n\tconst legendItems = legendContainer.selectAll('.legend-item')\n\t\t.data(colorScale.domain())\n\t\t.enter()\n\t\t.append('g')\n\t\t.attr('class', 'legend-item')\n\t\t.attr('transform', (d, i) => `translate(${i * 50}, 0)`);\n\n\tlegendItems.append('rect')\n\t\t.attr('width', 15)\n\t\t.attr('height', 15)\n\t\t.attr('margin-bottom', '3px')\n\t\t.style('fill', colorScale);\n\n\tlegendItems.append('text')\n\t\t.attr('x', 20)\n\t\t.attr('y', 15)\n\t\t.style('font-size', 'medium')\n\t\t.text(d => d);\n}\n","import * as preprocess from \"./preprocess.js\"\r\nimport Tooltip from \"./tooltip.js\";\r\n\r\nlet sankeyData = [];\r\nlet alluvialData = [];\r\n\r\nlet graph = {\r\n  nodes: [],\r\n  links: [],\r\n};\r\n\r\nconst width = 1500;\r\nconst height = 1000;\r\n\r\nconst tooltip = new Tooltip();\r\n\r\nexport function loadData() {\r\n  d3.select(\"#viz3\").on(\"mouseover\", null)\r\n  d3.csv('./alluvial_data.csv')\r\n    .then(files => {\r\n      preprocess.setAlluvialData(files[0]);\r\n      createAlluvialViz();\r\n    })\r\n}\r\n\r\nexport function initAlluvial() {\r\n  d3.select(\"#viz3\").on(\"mouseover\", loadData)\r\n}\r\n\r\n\r\n/* Ne correspond à rien \r\nA MODIFIER\r\n*/\r\nfunction extractTimes(name) {\r\n  switch(name) {\r\n    case \"matin\":\r\n      return \"4h-10h\"\r\n    case \"après-midi\":\r\n      return \"10h-16h\"\r\n    case \"soire\":\r\n      return \"16h-22h\"\r\n    case \"nuit\":\r\n      return \"22h-4h\"\r\n    default:\r\n      return name\r\n  }\r\n}\r\n\r\n\r\nexport function createAlluvialViz() {\r\n\r\n  sankeyData = preprocess.getSankeyData();\r\n\r\n  graph.nodes = [];\r\n  graph.links = [];\r\n\r\n  d3.select(\"#alluvialChart\").remove();\r\n\r\n  const svg = d3.select(\"#viz3\")\r\n    .append(\"svg\")\r\n    .attr(\"id\", \"alluvialChart\")\r\n    .attr(\"width\", \"70%\")\r\n\r\n  const sankey = d3.sankey()\r\n    .nodeSort(null)\r\n    .nodeWidth(15)\r\n    .nodePadding(10)\r\n    .size([width, height]);\r\n\r\n  console.log(sankeyData)\r\n\r\n  sankeyData.forEach(d => {\r\n    const sourceIndex = graph.nodes.findIndex(\r\n      node => node.name === d.source\r\n    );\r\n    const targetIndex = graph.nodes.findIndex(\r\n      node => node.name === d.target\r\n    );\r\n\r\n    const sourceNode = { name: d.source };\r\n    const targetNode = { name: d.target };\r\n\r\n    if (sourceIndex === -1) graph.nodes.push(sourceNode);\r\n    if (targetIndex === -1) graph.nodes.push(targetNode);\r\n\r\n    graph.links.push({\r\n      source: sourceIndex === -1 ? sourceNode : graph.nodes[sourceIndex],\r\n      target: targetIndex === -1 ? targetNode : graph.nodes[targetIndex],\r\n      value: d.count,\r\n      level: d.level\r\n    });\r\n  });\r\n\r\n  console.log(graph.nodes)\r\n  sankey(graph);\r\n\r\n  const node = svg.append(\"g\")\r\n    .selectAll(\".node\")\r\n    .data(graph.nodes)\r\n    .enter()\r\n    .append(\"g\")\r\n    .attr(\"class\", \"node\")\r\n    .attr(\"transform\", d => `translate(${d.x0},${d.y0})`);\r\n\r\n  const lastNode = node.filter((d, i) => i === graph.nodes.length - 1);\r\n  const lastNodeHeight = lastNode.node().getBoundingClientRect().height;\r\n\r\n  svg.attr(\"height\", height + lastNodeHeight);\r\n\r\n  node.append(\"rect\")\r\n    .attr(\"height\", d => d.y1 - d.y0)\r\n    .attr(\"width\", d => d.x1 - d.x0)\r\n    .on(\"mouseover\", (event, d) => {\r\n      showAlluvialNode(d.name);\r\n      return tooltip.showTooltipNode(event, extractTimes(d.name), d.value, d.layer)\r\n    })\r\n    .on(\"mousemove\", function(event) {\r\n      return tooltip.moveTooltip(event)\r\n    })\r\n    .on(\"mouseout\", function() {\r\n      tooltip.hideTooltip()\r\n      resetAlluvial()\r\n    })\r\n    .style(\"fill\", \"#a52a2a\");\r\n\r\n  node\r\n    .append(\"text\")\r\n    .attr('class', 'alluvial-labels')\r\n    .attr(\"x\", d => d.x0 < width / 2 ? 25 : -10)\r\n    .attr(\"y\", d => (d.y1 - d.y0) / 2)\r\n    .attr(\"dy\", \"0.35em\")\r\n    .style(\"padding-top\", 10)\r\n    .attr(\"text-anchor\", d => d.x0 < width / 2 ? \"start\" : \"end\")\r\n    .text(d => d.name)\r\n    .style(\"font-size\", \"18px\");\r\n\r\n  const link = svg\r\n    .append(\"g\")\r\n    .attr(\"fill\", \"none\")\r\n    .attr(\"stroke-opacity\", 0.5)\r\n    .selectAll(\"g\")\r\n    .data(graph.links)\r\n    .join(\"g\")\r\n    .attr(\"stroke\", \"gray\");\r\n\r\n  link\r\n    .attr(\"id\", d => 'link-' + d.index)\r\n    .append(\"path\")\r\n    .attr(\"d\", d3.sankeyLinkHorizontal())\r\n    .attr(\"stroke-width\", d => Math.max(1, d.width))\r\n    .on(\"mouseover\", (event, d) => {\r\n      showAlluvialLink(d.source.name, d.target.name);\r\n      return tooltip.showTooltipLink(event, extractTimes(d.source.name), extractTimes(d.target.name), d.value, d.level)\r\n    })\r\n    .on(\"mouseout\", resetAlluvial)\r\n\r\n  // Get the bounding box of all the g elements\r\n  const bbox = svg.select(\"g\").node().getBBox();\r\n\r\n  // Set the viewBox attribute on the svg element\r\n  svg.attr(\"viewBox\", `${bbox.x} ${bbox.y} ${bbox.width} ${bbox.height}`);\r\n}\r\n\r\n\r\nfunction highlightLinks(alluvialToHighlight, sankeyToHighlight) {\r\n\r\n\r\n  graph.links.forEach(link => {\r\n    const linkPath = d3.select(\"#link-\" + link.index + \" path\");\r\n    linkPath.attr(\"stroke-width\", 0);\r\n  });\r\n\r\n  sankeyToHighlight.forEach(sd => {\r\n    let sum = 0;\r\n    alluvialToHighlight.forEach(ad => {\r\n      if ((ad['airline'] == sd['source'] && ad['duration'] == sd['target']) ||\r\n        (ad['duration'] == sd['source'] && ad['departureTime'] == sd['target']) ||\r\n        (ad['departureTime'] == sd['source'] && ad['flightRange'] == sd['target'])) {\r\n        sum += ad['count'];\r\n      }\r\n    });\r\n    sd['count'] = sum;\r\n\r\n    graph.links.forEach(link => {\r\n      const linkPath =  d3.select(\"#link-\" + link.index + \" path\");\r\n      if (link['source'].name == sd['source'] && link['target'].name == sd['target']) {\r\n        const colorPercentage = sd['count'] / link['value'];\r\n        linkPath.attr(\"stroke-opacity\", 0.5)\r\n          .attr(\"stroke\", \"red\")\r\n          .attr(\"stroke-width\", d => Math.max(1, d.width * colorPercentage))\r\n          .on(\"mousemove\", function(event) {\r\n            return tooltip.moveTooltip(event)\r\n          })\r\n          .on(\"mouseout\", function() {\r\n            resetAlluvial();\r\n            return tooltip.hideTooltip();\r\n          })\r\n          \r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction showAlluvialLink(sourceName, targetName) {\r\n  alluvialData = preprocess.getFilteredAlluvialData();\r\n  let alluvialToHighlight = [];\r\n  let sankeyToHighlight = [];\r\n\r\n  // Filter the alluvialData to include only the relevant connections\r\n  alluvialData.forEach(d => {\r\n    const nameArray = [d['airline'], d['duration'], d['departureTime'], d['flightRange']]\r\n    if ( nameArray.includes(sourceName) && nameArray.includes(targetName)) {\r\n      alluvialToHighlight.push(d);\r\n    }\r\n  });\r\n\r\n  // Filter the sankeyData to include only the relevant connections\r\n  alluvialToHighlight.forEach(ad => {\r\n    const nameArray = [ad['airline'], ad['duration'], ad['departureTime'], ad['flightRange']]\r\n    sankeyData.forEach(sd => {\r\n      if (nameArray.includes(sd['source']) && nameArray.includes(sd['target'])) {\r\n        if (!sankeyToHighlight.includes(sd)) {\r\n          sankeyToHighlight.push(sd);\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  highlightLinks(alluvialToHighlight, sankeyToHighlight);\r\n}\r\n\r\nfunction showAlluvialNode(nodeName) {\r\n  alluvialData = preprocess.getFilteredAlluvialData();\r\n  let alluvialToHighlight = [];\r\n  let sankeyToHighlight = [];\r\n\r\n  // Filter the alluvialData to include only the relevant connections\r\n  alluvialData.forEach(d => {\r\n    const nameArray = [d['airline'], d['duration'], d['departureTime'], d['flightRange']]\r\n    if (nameArray.includes(nodeName)) {\r\n      alluvialToHighlight.push(d);\r\n    }\r\n  });\r\n\r\n  // Filter the sankeyData to include only the relevant connections\r\n  alluvialToHighlight.forEach(ad => {\r\n    sankeyData.forEach(sd => {\r\n      if ((sd['source'] == ad['airline'] && sd['target'] == ad['duration']) || (sd['source'] == ad['duration'] && sd['target'] == ad['departureTime']) ||\r\n        (sd['source'] == ad['departureTime'] && sd['target'] == ad['flightRange'])) {\r\n        if (!sankeyToHighlight.includes(sd)) {\r\n          sankeyToHighlight.push(sd);\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  highlightLinks(alluvialToHighlight, sankeyToHighlight);\r\n}\r\n\r\nfunction resetAlluvial() {\r\n  graph.links.forEach(link => {\r\n    const linkPath =  d3.select(\"#link-\" + link.index + \" path\");\r\n    linkPath.attr(\"stroke\", \"gray\")\r\n      .attr(\"stroke-opacity\", 0.5)\r\n      .attr(\"stroke-width\", d => Math.max(1, d.width));\r\n  });\r\n}","import * as preprocess from './preprocess.js'\nimport * as alluvial from './alluvial.js'\nimport * as waffle from './viz4.js'\n\nimport Tooltip from './tooltip.js'\n\nconst BUCKET_HEIGHT = 300;\nconst BUCKET_WIDTH = 200;\n\nlet tooltip = new Tooltip();\n\n\nexport function displayBucketGraph() {\n  const companiesFlightArray = preprocess.getCompaniesFlightArray();\n  const heightScale = createHeightScale(companiesFlightArray);\n  const bottomBucket = [...companiesFlightArray];\n  const topBucket = preprocess.resizeTopCompagnies(bottomBucket);\n  setUpSlider()\n  displayTopBucket(topBucket, heightScale);\n  displayBottomBucket(bottomBucket, heightScale);\n  setAnimation()\n\n}\n\nexport function setUpSlider() {\n  const\tslider=document.getElementById(\"slider\")\n  const sliderValue=document.getElementById(\"slider-value\")\n  sliderValue.innerHTML=slider.value\n  preprocess.filterAlluvialData()\n\tslider.oninput=function() {\n      sliderValue.innerHTML=this.value\n      d3.select('#topSVG').selectAll('*').remove()\n      d3.select('#bottomSVG').selectAll('*').remove()\n      preprocess.setTopCompaniesCount(this.value)\n      displayBucketGraph()\n      preprocess.filterAlluvialData()\n      if(preprocess.getCompaniesAircraftsMap().length !== 0)\n        waffle.modifyData();\n    \n\t}\n  alluvial.createAlluvialViz();\n}\n\nfunction displayTopBucket(topBucket, heightScale) {\n  d3.select(\"#topSVG\")\n    .selectAll('.topCompany')\n    .data(topBucket)\n    .enter()\n    .append('g')\n    .attr('class', 'topCompany')\n    .append('rect')\n    .attr('class', 'bucket-tile')\n    .attr('y', function(c, index) {\n      let y = BUCKET_HEIGHT;\n      for(let i =0; i <= index; i++){\n        y -= heightScale(topBucket[i][1])\n      }\n      return y;\n    })\n    .attr('fill', 'rgb(75, 115, 47)')\n    .attr('height', function(c) { \n      return heightScale(c[1])})\n    .attr('width', BUCKET_WIDTH)\n    .attr('stroke', 'rgb(40, 63, 25)')\n    .attr('stroke-width', '2px')\n    .on(\"mouseover\", function(m, d) {\n      d3.select(this)\n        .attr('fill', 'rgb(124, 191, 78)')\n      return tooltip.showTooltipTop(m, d) }\n    )\n    .on(\"mousemove\", function(m) { return tooltip.moveTooltip(m) })\n    .on(\"mouseleave\", function() {\n      d3.select(this)\n        .attr('fill', 'rgb(75, 115, 47)')\n\n      return tooltip.hideTooltip()\n    } )\n  d3.selectAll('.topCompany')\n    .append('text')\n    .attr('y', function(c, index) {\n      let y = BUCKET_HEIGHT;\n      for(let i =0; i <= index; i++){\n        y -= heightScale(topBucket[i][1])\n      }\n      y +=heightScale(c[1])/2\n      return y;\n    })\n    .attr('x', function() {return BUCKET_WIDTH / 2})\n    .attr('font-size', '18px')\n    .attr('text-anchor', 'middle')\n    .attr('fill', 'white')\n    .style('pointer-events', 'none')\n    .style('user-select', 'none')\n    .text(function(c) {\n      const height = heightScale(c[1]);\n      if(height > 22){\n        return c[0];\n      }\n      else if (height > 7) {\n        return \"...\"\n      }\n      return \"\"\n    })\n}\n\nfunction displayBottomBucket(bottomBucket, heightScale) {\n  const height = heightScale(d3.sum(bottomBucket, function(c) {return c[1]}))\n  let toolTipDisplay = \"\"\n  let flightTotal = 0;\n  for(let i = 0; i < 5; i++){\n    toolTipDisplay += (i+1) + '.' + ' ' + bottomBucket[i][0] + ': ' + bottomBucket[i][1] + ' vols <br>'\n    flightTotal += bottomBucket[i][1];\n  }\n  toolTipDisplay += '<br><b>Nombre total de vols: ' + flightTotal + ' vols</b>'\n  d3.select(\"#bottomSVG\")\n    .append('g')\n    .attr('width', BUCKET_WIDTH)\n    .style('text-align', 'center')\n    .attr('class', 'bottomCompany')\n    .append('rect')\n    .attr('class', 'bucket-tile')\n    .attr('y', function(c, index) {\n      return BUCKET_HEIGHT - height;\n    })\n    .attr('fill', \"rgb(59, 56, 56)\")\n    .attr('height', function(c) { \n      return height})\n    .attr('width', BUCKET_WIDTH)\n    .attr('stroke-width', '2px')\n    .attr('stroke', 'rgb(44, 42, 42)')\n    .on(\"mouseover\", function(m) { \n      d3.select(this).style('fill', 'rgb(96, 91, 91)')\n      return tooltip.showTooltipBottom(m, toolTipDisplay) })\n    .on(\"mousemove\", function(m) { return tooltip.moveTooltip(m) })\n    .on(\"mouseleave\", function() {\n      d3.select(this).style('fill', 'rgb(59, 56, 56)')\n      return tooltip.hideTooltip()\n    } )\n  d3.select('.bottomCompany').append('text').attr('y', function() {\n      return BUCKET_HEIGHT - height/2;\n    })\n    .attr('x', function() {return BUCKET_WIDTH / 2})\n    .attr('font-size', '18px')\n    .attr('text-anchor', 'middle')\n    .attr('fill', 'white')\n    .style('pointer-events', 'none')\n    .style('user-select', 'none')\n    .text('Autres compagnies')\n}\n\nfunction createHeightScale (topCompanies) {\n  const maxHeight = d3.sum(topCompanies, c => c[1])\n  return d3.scaleLinear().domain([d3.min(topCompanies, function(d) {return d[1]}), maxHeight]).range([0, BUCKET_HEIGHT])\n}\n\nfunction setAnimation() {\n  const hublot = document.getElementById('right-hublot-cover');\n  const lid = document.getElementById('lid');\n  const handle = document.getElementById('handle');\n  let open = false;\n  document.getElementById('right-hublot').onclick = function () {\n    if(!open) {\n      hublot.classList.remove('closeLid');\n      lid.classList.remove('pullHandle');\n      handle.classList.remove('pullHandle');\n      hublot.classList.add('openLid');\n      lid.classList.add('liftHandle');\n      handle.classList.add('liftHandle');\n    }\n    else {\n      hublot.classList.remove('openLid');\n      lid.classList.remove('liftHandle');\n      handle.classList.remove('liftHandle');\n      hublot.classList.add('closeLid');\n      lid.classList.add('pullHandle');\n      handle.classList.add('pullHandle');\n\n    }\n    open = !open;\n    \n  }\n}","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.scrollama = factory());\n}(this, (function () { 'use strict';\n\n  // DOM helper functions\n\n  // public\n  function selectAll(selector, parent = document) {\n    if (typeof selector === 'string') {\n      return Array.from(parent.querySelectorAll(selector));\n    } else if (selector instanceof Element) {\n      return [selector];\n    } else if (selector instanceof NodeList) {\n      return Array.from(selector);\n    } else if (selector instanceof Array) {\n      return selector;\n    }\n    return [];\n  }\n\n  // SETUP\n  function create(className) {\n  \tconst el = document.createElement(\"div\");\n  \tel.className = `scrollama__debug-step ${className}`;\n  \tel.style.position = \"fixed\";\n  \tel.style.left = \"0\";\n  \tel.style.width = \"100%\";\n  \tel.style.zIndex = \"9999\";\n  \tel.style.borderTop = \"2px solid black\";\n  \tel.style.borderBottom = \"2px solid black\";\n\n  \tconst p = document.createElement(\"p\");\n  \tp.style.position = \"absolute\";\n  \tp.style.left = \"0\";\n  \tp.style.height = \"1px\";\n  \tp.style.width = \"100%\";\n  \tp.style.borderTop = \"1px dashed black\";\n\n  \tel.appendChild(p);\n  \tdocument.body.appendChild(el);\n  \treturn el;\n  }\n\n  // UPDATE\n  function update({ id, step, marginTop }) {\n  \tconst { index, height } = step;\n  \tconst className = `scrollama__debug-step--${id}-${index}`;\n  \tlet el = document.querySelector(`.${className}`);\n  \tif (!el) el = create(className);\n\n  \tel.style.top = `${marginTop * -1}px`;\n  \tel.style.height = `${height}px`;\n  \tel.querySelector(\"p\").style.top = `${height / 2}px`;\n  }\n\n  function generateId() {\n      const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n      const date = Date.now();\n      const result = [];\n      for (let i = 0; i < 6; i += 1) {\n        const char = alphabet[Math.floor(Math.random() * alphabet.length)];\n        result.push(char);\n      }\n      return `${result.join(\"\")}${date}`;\n    }\n\n  function err$1(msg) {\n  \tconsole.error(`scrollama error: ${msg}`);\n  }\n\n  function getIndex(node) {\n  \treturn +node.getAttribute(\"data-scrollama-index\");\n  }\n\n  function createProgressThreshold(height, threshold) {\n      const count = Math.ceil(height / threshold);\n      const t = [];\n      const ratio = 1 / count;\n      for (let i = 0; i < count + 1; i += 1) {\n        t.push(i * ratio);\n      }\n      return t;\n    }\n\n  function parseOffset(x) {\n  \tif (typeof x === \"string\" && x.indexOf(\"px\") > 0) {\n  \t\tconst v = +x.replace(\"px\", \"\");\n  \t\tif (!isNaN(v)) return { format: \"pixels\", value: v };\n  \t\telse {\n  \t\t\terr(\"offset value must be in 'px' format. Fallback to 0.5.\");\n  \t\t\treturn { format: \"percent\", value: 0.5 };\n  \t\t}\n  \t} else if (typeof x === \"number\" || !isNaN(+x)) {\n  \t\tif (x > 1) err(\"offset value is greater than 1. Fallback to 1.\");\n  \t\tif (x < 0) err(\"offset value is lower than 0. Fallback to 0.\");\n  \t\treturn { format: \"percent\", value: Math.min(Math.max(0, x), 1) };\n  \t}\n  \treturn null;\n  }\n\n  function indexSteps(steps) {\n  \tsteps.forEach((step) =>\n  \t\tstep.node.setAttribute(\"data-scrollama-index\", step.index)\n  \t);\n  }\n\n  function getOffsetTop(node) {\n    const { top } = node.getBoundingClientRect();\n    const scrollTop = window.pageYOffset;\n    const clientTop = document.body.clientTop || 0;\n    return top + scrollTop - clientTop;\n  }\n\n  let currentScrollY;\n  let comparisonScrollY;\n  let direction;\n\n  function onScroll(container) {\n  \tconst scrollTop = container ? container.scrollTop : window.pageYOffset;\n\n  \tif (currentScrollY === scrollTop) return;\n  \tcurrentScrollY = scrollTop;\n  \tif (currentScrollY > comparisonScrollY) direction = \"down\";\n  \telse if (currentScrollY < comparisonScrollY) direction = \"up\";\n  \tcomparisonScrollY = currentScrollY;\n  }\n\n  function setupScroll(container) {\n  \tcurrentScrollY = 0;\n  \tcomparisonScrollY = 0;\n  \tdocument.addEventListener(\"scroll\", () => onScroll(container));\n  }\n\n  function scrollama() {\n  \tlet cb = {};\n\n  \tlet id = generateId();\n  \tlet steps = [];\n  \tlet globalOffset;\n  \tlet containerElement;\n  \tlet rootElement;\n\n  \tlet progressThreshold = 0;\n\n  \tlet isEnabled = false;\n  \tlet isProgress = false;\n  \tlet isDebug = false;\n  \tlet isTriggerOnce = false;\n\n  \tlet exclude = [];\n\n  \t/* HELPERS */\n  \tfunction reset() {\n  \t\tcb = {\n  \t\t\tstepEnter: () => { },\n  \t\t\tstepExit: () => { },\n  \t\t\tstepProgress: () => { },\n  \t\t};\n  \t\texclude = [];\n  \t}\n\n  \tfunction handleEnable(shouldEnable) {\n  \t\tif (shouldEnable && !isEnabled) updateObservers();\n  \t\tif (!shouldEnable && isEnabled) disconnectObservers();\n  \t\tisEnabled = shouldEnable;\n  \t}\n\n  \t/* NOTIFY CALLBACKS */\n  \tfunction notifyProgress(element, progress) {\n  \t\tconst index = getIndex(element);\n  \t\tconst step = steps[index];\n  \t\tif (progress !== undefined) step.progress = progress;\n  \t\tconst response = { element, index, progress, direction };\n  \t\tif (step.state === \"enter\") cb.stepProgress(response);\n  \t}\n\n  \tfunction notifyStepEnter(element, check = true) {\n  \t\tconst index = getIndex(element);\n  \t\tconst step = steps[index];\n  \t\tconst response = { element, index, direction };\n\n  \t\tstep.direction = direction;\n  \t\tstep.state = \"enter\";\n\n  \t\t// if (isPreserveOrder && check && direction !== \"up\")\n  \t\t//   notifyOthers(index, \"above\");\n  \t\t// if (isPreserveOrder && check && direction === \"up\")\n  \t\t//   notifyOthers(index, \"below\");\n\n  \t\tif (!exclude[index]) cb.stepEnter(response);\n  \t\tif (isTriggerOnce) exclude[index] = true;\n  \t}\n\n  \tfunction notifyStepExit(element, check = true) {\n  \t\tconst index = getIndex(element);\n  \t\tconst step = steps[index];\n\n  \t\tif (!step.state) return false;\n\n  \t\tconst response = { element, index, direction };\n\n  \t\tif (isProgress) {\n  \t\t\tif (direction === \"down\" && step.progress < 1) notifyProgress(element, 1);\n  \t\t\telse if (direction === \"up\" && step.progress > 0)\n  \t\t\t\tnotifyProgress(element, 0);\n  \t\t}\n\n  \t\tstep.direction = direction;\n  \t\tstep.state = \"exit\";\n\n  \t\tcb.stepExit(response);\n  \t}\n\n  \t/* OBSERVERS - HANDLING */\n  \tfunction resizeStep([entry]) {\n  \t\tconst index = getIndex(entry.target);\n  \t\tconst step = steps[index];\n  \t\tconst h = entry.target.offsetHeight;\n  \t\tif (h !== step.height) {\n  \t\t\tstep.height = h;\n  \t\t\tdisconnectObserver(step);\n  \t\t\tupdateStepObserver(step);\n  \t\t\tupdateResizeObserver(step);\n  \t\t}\n  \t}\n\n  \tfunction intersectStep([entry]) {\n  \t\tonScroll(containerElement);\n\n  \t\tconst { isIntersecting, target } = entry;\n  \t\tif (isIntersecting) notifyStepEnter(target);\n  \t\telse notifyStepExit(target);\n  \t}\n\n  \tfunction intersectProgress([entry]) {\n  \t\tconst index = getIndex(entry.target);\n  \t\tconst step = steps[index];\n  \t\tconst { isIntersecting, intersectionRatio, target } = entry;\n  \t\tif (isIntersecting && step.state === \"enter\")\n  \t\t\tnotifyProgress(target, intersectionRatio);\n  \t}\n\n  \t/*  OBSERVERS - CREATION */\n  \tfunction disconnectObserver({ observers }) {\n  \t\tObject.keys(observers).map((name) => {\n  \t\t\tobservers[name].disconnect();\n  \t\t});\n  \t}\n\n  \tfunction disconnectObservers() {\n  \t\tsteps.forEach(disconnectObserver);\n  \t}\n\n  \tfunction updateResizeObserver(step) {\n  \t\tconst observer = new ResizeObserver(resizeStep);\n  \t\tobserver.observe(step.node);\n  \t\tstep.observers.resize = observer;\n  \t}\n\n  \tfunction updateResizeObservers() {\n  \t\tsteps.forEach(updateResizeObserver);\n  \t}\n\n  \tfunction updateStepObserver(step) {\n  \t\tconst h = window.innerHeight;\n  \t\tconst off = step.offset || globalOffset;\n  \t\tconst factor = off.format === \"pixels\" ? 1 : h;\n  \t\tconst offset = off.value * factor;\n  \t\tconst marginTop = step.height / 2 - offset;\n  \t\tconst marginBottom = step.height / 2 - (h - offset);\n  \t\tconst rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n  \t\tconst root = rootElement;\n\n  \t\tconst threshold = 0.5;\n  \t\tconst options = { rootMargin, threshold, root };\n  \t\tconst observer = new IntersectionObserver(intersectStep, options);\n\n  \t\tobserver.observe(step.node);\n  \t\tstep.observers.step = observer;\n\n  \t\tif (isDebug) update({ id, step, marginTop, marginBottom });\n  \t}\n\n  \tfunction updateStepObservers() {\n  \t\tsteps.forEach(updateStepObserver);\n  \t}\n\n  \tfunction updateProgressObserver(step) {\n  \t\tconst h = window.innerHeight;\n  \t\tconst off = step.offset || globalOffset;\n  \t\tconst factor = off.format === \"pixels\" ? 1 : h;\n  \t\tconst offset = off.value * factor;\n  \t\tconst marginTop = -offset + step.height;\n  \t\tconst marginBottom = offset - h;\n  \t\tconst rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n\n  \t\tconst threshold = createProgressThreshold(step.height, progressThreshold);\n  \t\tconst options = { rootMargin, threshold };\n  \t\tconst observer = new IntersectionObserver(intersectProgress, options);\n\n  \t\tobserver.observe(step.node);\n  \t\tstep.observers.progress = observer;\n  \t}\n\n  \tfunction updateProgressObservers() {\n  \t\tsteps.forEach(updateProgressObserver);\n  \t}\n\n  \tfunction updateObservers() {\n  \t\tdisconnectObservers();\n  \t\tupdateResizeObservers();\n  \t\tupdateStepObservers();\n  \t\tif (isProgress) updateProgressObservers();\n  \t}\n\n  \t/* SETUP */\n  \tconst S = {};\n\n  \tS.setup = ({\n  \t\tstep,\n  \t\tparent,\n  \t\toffset = 0.5,\n  \t\tthreshold = 4,\n  \t\tprogress = false,\n  \t\tonce = false,\n  \t\tdebug = false,\n  \t\tcontainer = undefined,\n  \t\troot = null\n  \t}) => {\n\n  \t\tsetupScroll(container);\n\n  \t\tsteps = selectAll(step, parent).map((node, index) => ({\n  \t\t\tindex,\n  \t\t\tdirection: undefined,\n  \t\t\theight: node.offsetHeight,\n  \t\t\tnode,\n  \t\t\tobservers: {},\n  \t\t\toffset: parseOffset(node.dataset.offset),\n  \t\t\ttop: getOffsetTop(node),\n  \t\t\tprogress: 0,\n  \t\t\tstate: undefined,\n  \t\t}));\n\n  \t\tif (!steps.length) {\n  \t\t\terr$1(\"no step elements\");\n  \t\t\treturn S;\n  \t\t}\n\n  \t\tisProgress = progress;\n  \t\tisTriggerOnce = once;\n  \t\tisDebug = debug;\n  \t\tprogressThreshold = Math.max(1, +threshold);\n  \t\tglobalOffset = parseOffset(offset);\n  \t\tcontainerElement = container;\n  \t\trootElement = root;\n\n  \t\treset();\n  \t\tindexSteps(steps);\n  \t\thandleEnable(true);\n  \t\treturn S;\n  \t};\n\n  \tS.enable = () => {\n  \t\thandleEnable(true);\n  \t\treturn S;\n  \t};\n\n  \tS.disable = () => {\n  \t\thandleEnable(false);\n  \t\treturn S;\n  \t};\n\n  \tS.destroy = () => {\n  \t\thandleEnable(false);\n  \t\treset();\n  \t\treturn S;\n  \t};\n\n  \tS.resize = () => {\n  \t\tupdateObservers();\n  \t\treturn S;\n  \t};\n\n  \tS.offset = (x) => {\n  \t\tif (x === null || x === undefined) return globalOffset.value;\n  \t\tglobalOffset = parseOffset(x);\n  \t\tupdateObservers();\n  \t\treturn S;\n  \t};\n\n  \tS.onStepEnter = (f) => {\n  \t\tif (typeof f === \"function\") cb.stepEnter = f;\n  \t\telse err$1(\"onStepEnter requires a function\");\n  \t\treturn S;\n  \t};\n\n  \tS.onStepExit = (f) => {\n  \t\tif (typeof f === \"function\") cb.stepExit = f;\n  \t\telse err$1(\"onStepExit requires a function\");\n  \t\treturn S;\n  \t};\n\n  \tS.onStepProgress = (f) => {\n  \t\tif (typeof f === \"function\") cb.stepProgress = f;\n  \t\telse err$1(\"onStepProgress requires a function\");\n  \t\treturn S;\n  \t};\n  \treturn S;\n  }\n\n  return scrollama;\n\n})));\n","import Tooltip from '../tooltip';\nimport * as preprocess from '../preprocess.js';\n\n/**\n * Création d'un objet Network\n * @param {*} svg balise du DOM contenant le graphique généré\n * @param {integer} ratio rapport long/larg de la taille disponible\n */\nexport default class Network {\n\n/**\n * Création d'un objet Network\n * @param {*} svg balise du DOM contenant le graphique généré\n * @param {integer} ratio rapport long/larg de la taille disponible\n */\n  constructor(svg, ratio = 1) {\n    this.tooltip = new Tooltip()\n    this.tooltipLegend = new Tooltip(\"#viz2\")\n    this.ratio = ratio\n    this.svg = svg;\n    this.airportCode = {};\n    this.levelGeo = { 1: \"QC\", 2: \"CA\", 3: \"WORLD\", 4: null, \"QC\": 1, \"CA\": 2, \"WORLD\": 3, null: 4 };\n    this.ccolor = {\n      \"Africa\": 'rgba(0, 0, 255,',\n      \"America\": 'rgba(151, 18, 18,',\n      \"Europe\": 'rgba(0, 255, 0,',\n      \"Asia\": 'rgba(0, 255, 255,',\n      \"Oceania\": 'rgba(255, 0, 255,'\n    }\n    this.currentGeo = \"QC\";\n    this.limits = [];\n    this.minMaxXGlobal = [1000000, 0];\n    this.minMaxYGlobal = [1000000, 0];\n    this.isFlightShow = false;\n\n    this.createLegend();\n  }\n\n  /**\n   * Affiche les différents aéroports d'un niveau \n   * @param {*} val valeur subissant la transformation\n   */\n  scaleSize(val) {\n    return 2 * (parseFloat(val) / 10E4 + Math.log(val) / 5);\n  }\n\n  /**\n   * Met à jour le status géographique courant \n   * @param {*} val valeur d'incrément\n   */\n  updateCurrentState(val) {\n    this.currentGeo = this.levelGeo[this.levelGeo[this.currentGeo] + val];\n  }\n\n\n  /**\n   * Affiche les différents aéroports d'un niveau \n   * donné selon l'état interne du système.\n   */\n  createLegend() {\n    var self = this\n\n    self.tooltipLegend.createLegendNetwork()\n    var infoButtion_siCliked = false\n    d3.select(\"#infoNetworkButton\")\n      .style(\"cursor\", \"help\")\n      .on(\"click\", function () {\n        infoButtion_siCliked = !infoButtion_siCliked;\n        if (infoButtion_siCliked) {\n          return self.tooltipLegend.showLegendNetwork();\n        } else {\n          return self.tooltipLegend.hiddenLegendNetwork();\n        }\n      }).on(\"mouseover\", function () {\n        d3.select(this).style(\"color\", \"blue\")\n      }).on(\"mouseleave\", function () {\n        d3.select(this).style(\"color\", \"black\")\n      })\n  }\n\n  createLegend() {\n    var self = this\n\n    self.tooltipLegend.createLegendNetwork()\n    var infoButtion_siCliked = false\n    d3.select(\"#infoNetworkButton\")\n      .style(\"cursor\", \"help\")\n      .on(\"click\", function () {\n        infoButtion_siCliked = !infoButtion_siCliked;\n        if (infoButtion_siCliked) {\n          return self.tooltipLegend.showLegendNetwork();\n        } else {\n          return self.tooltipLegend.hiddenLegendNetwork();\n        }\n      }).on(\"mouseover\", function () {\n        d3.select(this).style(\"color\", \"blue\")\n      }).on(\"mouseleave\", function () {\n        d3.select(this).style(\"color\", \"black\")\n      })\n  }\n\n\n  /**\n   * Affiche les différents aéroports d'un niveau \n   * donné selon l'état interne du système.\n   */\n  displayAirports() {\n\n    var readAirports = function (localairports) {\n\n      switch (this.currentGeo) {\n        case \"QC\":\n          this.tooltipLegend.addAirportLegendNetwork(this.currentGeo, \"québécois\", 'rgba(255, 0, 0, 0.6)');\n          break;\n        case \"CA\":\n          this.tooltipLegend.addAirportLegendNetwork(this.currentGeo, \"américain non québécois\", this.ccolor['America'] + '0.6)');\n          break;\n        case \"WORLD\":\n          for (let cont of [[\"Africa\", \"africain\"], [\"Europe\", \"européen\"], [\"Asia\", \"asiatique\"], [\"Oceania\", \"océanien\"]]) {\n            this.tooltipLegend.addAirportLegendNetwork(this.currentGeo, cont[1], this.ccolor[cont[0]] + '0.6)');\n          }\n          break;\n      }\n\n      var nb = localairports.length\n      var minMaxX = d3.extent(localairports, d => parseFloat(d.lat))\n      var minMaxY = d3.extent(localairports, d => parseFloat(d.lon) / this.ratio)\n      // Mise à jour des données selon les dimensions de l'écran disponible\n      localairports.forEach(item => this.airportCode[item.airport] = [parseFloat(item.lat), parseFloat(item.lon) / this.ratio])\n\n      minMaxX = [Math.min(minMaxX[0] - 10, this.minMaxXGlobal[0]), Math.max(minMaxX[1] + 10, this.minMaxXGlobal[1])]\n      minMaxY = [Math.min(minMaxY[0] - 10, this.minMaxYGlobal[0]), Math.max(minMaxY[1] + 10, this.minMaxYGlobal[1])]\n\n      if (this.limits[this.levelGeo[this.currentGeo]] === undefined) {\n        this.limits[this.levelGeo[this.currentGeo]] = `${minMaxX[0]},${minMaxY[0]},${minMaxX[1] - minMaxX[0]},${minMaxY[1] - minMaxY[0]}`\n      }\n\n      this.minMaxXGlobal, this.minMaxYGlobal = minMaxX, minMaxY\n\n      var self = this\n\n      this.svg.transition()\n        .ease(d3.easePolyInOut)\n        .duration(800)\n        .attr(\"viewBox\", this.limits[this.levelGeo[this.currentGeo]])\n        .attr(\"transform-box\", \"content-box\")\n\n      // Gestion de l'affichage\n      var circles = this.svg.selectAll('airports')\n        .data(localairports)\n        .join('circle')\n\n      if (this.currentGeo !== \"WORLD\") {\n        circles.on(\"mouseover\", function (m, data) {\n          d3.select(this)\n            .attr(\"r\", d => 1.5 * self.scaleSize(d.freq))\n            .attr('stroke-width', '.4')\n          return self.tooltip.showTooltipAirport(m, [data.airport, data.country, data.city, data.freq])\n        })\n          .on(\"mouseleave\", function (e) {\n            d3.select(this)\n              .attr(\"r\", d => self.scaleSize(d.freq))\n              .attr('stroke-width', '.1')\n            return self.tooltip.hideTooltip()\n          })\n      }\n\n      // Affichage des cercles visibles\n      circles.attr('stroke', 'black')\n        .attr('stroke-width', '.1')\n        .attr('class', d => this.currentGeo + \" \" + d.continent + \" \" + d.airport)\n        .attr(\"transform\", d => `translate(${this.airportCode[d.airport]})`)\n        .attr(\"r\", 0)\n        .transition()\n        .ease(d3.easeCubicOut)\n        .delay(function (d, i) { return 100 * i / nb; })\n        .duration(800)\n        .attr(\"r\", d => this.scaleSize(d.freq))\n        .style('fill', d => (this.currentGeo == \"QC\") ? 'rgba(255, 0, 0, 0.6)' : (this.ccolor[d.continent] + ' 0.6)'))\n\n      if (this.currentGeo === \"WORLD\") {\n\n        var circlesTooltips = this.svg.selectAll('airports')\n          .data(localairports)\n          .join('circle')\n\n        // Création des cercles d'interaction, plus larges\n        circlesTooltips.attr(\"r\", d => Math.max(8, self.scaleSize(d.freq)))\n          .attr(\"transform\", d => `translate(${this.airportCode[d.airport]})`)\n          .attr(\"opacity\", 0)\n          .attr(\"class\", d => this.currentGeo + \" \" + d.continent + \" \" + d.airport + \" tooltipsCircle\")\n          .on(\"mouseover\", function (m, data) {\n            d3.select(\".\" + data.airport)\n              .attr(\"r\", 1.5 * self.scaleSize(data.freq))\n              .attr('stroke-width', '.4')\n            return self.tooltip.showTooltipAirport(m, [data.airport, data.country, data.city, data.freq])\n          })\n          .on(\"mouseleave\", function (m, data) {\n            d3.select(\".\" + data.airport).attr(\"r\", d => Math.log(d.freq + 1) / 4)\n              .attr('stroke-width', '.1')\n            return self.tooltip.hideTooltip()\n          })\n      }\n\n      this.updateCurrentState(1)\n\n    }\n\n    d3.csv(`./${this.currentGeo}/airports${this.currentGeo}.csv`)\n      .then(readAirports.bind(this))\n\n  }\n\n  /**\n   * Affiche les différents vols d'un niveau \n   * donné selon l'état interne du système.\n   */\n  displayFlights() {\n\n    var readFlights = function (localflights) {\n\n      if (this.currentGeo == \"QC\") {\n        this.isFlightShow = true;\n        this.tooltipLegend.addFlightLegendNetwork(\"Vols des principales compagnies\", 'rgba(0, 0, 0, 0.2)');\n        this.tooltipLegend.addFlightLegendNetwork(\"Autres vols\", 'rgba(187, 40, 255, 0.2)');\n      }\n\n      this.svg.selectAll('flights')\n        .data(localflights)\n        .join('line')\n        .attr('class', this.currentGeo)\n        .attr('x1', d => this.airportCode[d.airportIn][0])\n        .attr('y1', d => this.airportCode[d.airportIn][1])\n        .attr('x2', d => this.airportCode[d.airportIn][0])\n        .attr('y2', d => this.airportCode[d.airportIn][1])\n        .style('stroke-width', d => 2 * this.scaleSize(d.number))\n        .transition()\n        .ease(d3.easeCubicInOut)\n        .duration(800)\n        .attr('x2', d => this.airportCode[d.airportOut][0])\n        .attr('y2', d => this.airportCode[d.airportOut][1])\n        .style('stroke', d => (d.company !== \"OTHERS\") ? 'rgba(187, 40, 255, 0.2)' : 'rgba(0, 0, 0, 0.04)')\n\n      this.updateCurrentState(1)\n      this.svg.selectAll('circle').raise()\n    }\n\n    this.updateCurrentState(-1)\n    d3.csv(`./${this.currentGeo}/flights${this.currentGeo}.csv`)\n      .then(preprocess.groupByMainCompanies)\n      .then(readFlights.bind(this))\n  }\n\n  /**\n   * Supprime les différents aéroports d'un niveau \n   * donnée selon l'état interne du système.\n   * @param {boolean} firstTransition permière transition\n   */\n  removeAirports(firstTransition = false) {\n    this.updateCurrentState(-1)\n\n    if (!firstTransition) {\n      this.tooltipLegend.delAirportLegendNetwork(this.currentGeo)\n\n      this.svg.transition()\n        .duration(1000)\n        .attr(\"viewBox\", this.limits[this.levelGeo[this.currentGeo] - 1])\n\n      this.svg.selectAll('circle.' + this.currentGeo)\n        .transition()\n        .duration(1000)\n        .attr(\"r\", 0)\n        .remove()\n\n    } else {\n      // supprime l'ensemble des données affichées\n      // Efface l'ensemble des données\n      this.currentGeo = \"QC\";\n\n      [\"WORLD\", \"CA\", \"QC\"].forEach(lvl => {\n        this.tooltipLegend.delAirportLegendNetwork(lvl)\n\n        this.svg.selectAll('line.' + lvl)\n          .transition()\n          .duration(1000)\n          .style('stroke', 'rgba(0, 0, 0, 0.0)')\n          .remove()\n\n        this.svg.selectAll('circle.' + lvl)\n          .transition()\n          .duration(1000)\n          .attr(\"r\", 0)\n          .remove()\n      });\n    }\n  }\n\n  /**\n   * Supprime les différents vols d'un niveau \n   * donnée selon l'état interne du système.\n   */\n  removeFlights() {\n\n    if (this.levelGeo[this.levelGeo[this.currentGeo] - 1] === \"QC\") {\n      this.isFlightShow = true;\n      this.tooltipLegend.delFlightLegendNetwork();\n    }\n\n    this.svg.selectAll('line.' + this.levelGeo[this.levelGeo[this.currentGeo] - 1])\n      .transition()\n      .duration(1000)\n      .style('stroke', 'rgba(0, 0, 0, 0.0)')\n      .remove()\n  }\n}","import scrollama from \"scrollama\";\nimport Network from \"./scrolly/network.js\";\nimport Tooltip from './tooltip';\n\nvar scrolly = d3.select(\"#scrolly\");\nvar figure = scrolly.select(\"figure\");\nvar article = scrolly.select(\"article\");\nvar step = article.selectAll(\".step\");\n\nvar figureHeight = 4 * window.innerHeight / 5;\n\n// Initialise le scrolly-telling\nvar scroller = scrollama();\n\nconst svg = d3.select('#viz2')\n    .append('svg')\n\nconst figWidth = d3.select(\"figure\")\n    .node()\n    .getBoundingClientRect()\n    .width\n\nconst network = new Network(svg, figWidth / figureHeight);\n\n/**\n * Gère l'affichage des différents phases de la construction du réseau\n * @param {*} response phase du scrolling\n */\nfunction handleStepEnter(response) {\n    if (response.direction === 'down') {\n        if (response.index % 2 === 0 && response.index !== 6) {\n            network.displayAirports()\n        } else if (response.index % 2 === 1) {\n            network.displayFlights()\n        }\n    } else {\n        if ((response.index % 2 === 1) && response.index !== 5) {\n            network.removeAirports()\n        } else if ((response.index % 2 === 0) && response.index !== 6) {\n            network.removeFlights()\n        }\n    }\n}\n\n/**\n* Redimensionne la visualisation à la taille de l'écran\n*/\nfunction handleResize() {\n    const stepH = Math.floor(window.innerHeight * 0.75);\n    step.style(\"height\", stepH + \"px\");\n    const figureMarginTop = (window.innerHeight - figureHeight) / 2;\n\n    figure.style(\"height\", figureHeight + \"px\")\n        .style(\"top\", figureMarginTop + \"px\");\n\n    scroller.resize();\n}\n\n/**\n * Efface l'ensemble des données lors de la sortie \n * du scrolly-telling par le haut\n * @param {*} response phase du scrolling\n */\nfunction handleStepExit(response) {\n    if (response.direction === 'up' && response.index === 0) {\n        network.removeAirports(true);\n    }\n}\n\n\n/**\n * Initialise la création du réseau\n */\nexport function initNetwork() {\n\n    handleResize();\n    scroller\n        .setup({\n            step: \"#scrolly article .step\",\n            offset: 0.33,\n            debug: false\n        })\n        .onStepExit(handleStepExit)\n        .onStepEnter(handleStepEnter);\n}","import * as waffles from './scripts/viz4.js'\nimport * as alluvial from './scripts/alluvial.js'\nimport * as buckets from './scripts/viz1.js'\nimport * as preprocess from './scripts/preprocess.js'\nimport * as network from './scripts/scrolly.js'\n\nwindow.onbeforeunload = function () {\n    window.scrollTo(0, 0);\n  }\n\nwindow.onload = () => {\n\n    Promise.all([\n        d3.csv('./WORLD/flightsWORLD.csv'),\n        d3.csv('./CA/flightsCA.csv'),\n        d3.csv('./QC/flightsQC.csv'),\n        d3.csv('./alluvial_data.csv')\n    ]).then(function (files) {\n        preprocess.setData(files[0].concat(files[1], files[2]));\n        preprocess.setAlluvialData(files[3]);\n        preprocess.setTopCompaniesCount(5);\n        buckets.displayBucketGraph();\n        buckets.setUpSlider();\n    })\n\n    network.initNetwork()\n    // alluvial.initAlluvial()\n    waffles.initWaffle()\n};\n\n\n\n\n"]}